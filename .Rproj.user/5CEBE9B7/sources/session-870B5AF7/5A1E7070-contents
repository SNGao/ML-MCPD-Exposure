---
title: "00_Data_preprocess"
---

# 01.Load Packages and files
```{r}
library(modelr)
library(mice)
library(VIM)
library(DMwR2)
library(rpart)
library(car)
library(splines)
library(gam)
library(caret)
library(dplyr)

source('02_src/defined_functions.R')
data_MCPD = read.csv('00_Data/data_MCPD.csv') # Generated from STATA files
data_MCPD$MARRIAGE = ifelse(data_MCPD$MARRIAGE == 1, 3, data_MCPD$MARRIAGE)
table(data_MCPD$MARRIAGE)
colnames(data_MCPD)
```

# 02.Pre-process data
## Define and transform
```{r}
# Define Catogory Variables
data_MCPD$SEX<-as.factor(data_MCPD$SEX)
data_MCPD$FAMINCOM5w<-as.factor(data_MCPD$FAMINCOM5w)
data_MCPD$SMOKE<-as.factor(data_MCPD$SMOKE)
data_MCPD$MARRIAGE<-as.factor(data_MCPD$MARRIAGE)
data_MCPD$education<-as.factor(data_MCPD$education)
data_MCPD$alcohol<-as.factor(data_MCPD$alcohol)
data_MCPD$CVD<-as.factor(data_MCPD$CVD)
data_MCPD$db<-as.factor(data_MCPD$db)
data_MCPD$HBP<-as.factor(data_MCPD$HBP)

# Log-Transformed for exposure and response variable (i.e. outcome)
data_MCPD$dietaryMCPD <- log(data_MCPD$dietaryMCPD)
data_MCPD$DHPMA_a <- log(data_MCPD$DHPMA_a)

# Scaled Quantitive variables
data_MCPD[1:12]<- scale(data_MCPD[1:12],center=F,scale=T)

# Exclude outlier in the response variable.
list = c()
value <- data_MCPD$dietaryMCPD
QL <- quantile(value, probs = 0.25)
QU <- quantile(value, probs = 0.75)
a <- which(value > QU + 1.5*(QU-QL)) 
b <- which(value < QL - 1.5*(QU-QL)) 
temp <- append(a,b)
list <- append(list, temp)
list <- list[!duplicated(list)]
data_MCPD <- data_MCPD[-list,]
```

## Normality test
```{r}
library(nortest)
norm.test = lillie.test(data_MCPD$dietaryMCPD)

pdf('01_Output_Results/Normality-test-MCPD.pdf')
hist_data = hist(data_MCPD$dietaryMCPD,
     main = "Histogram of dietaryMCPD", xlab = "dietaryMCPD", col = "lightblue")
text(x = mean(range(data_MCPD$dietaryMCPD))*1.4, 
     y = max(hist_data$counts) * 0.8, paste0('P=',round(norm.test$p.value, 3)), col = "red", cex = 1.2)
dev.off()
```

## Table 1
```{r}
data.raw = read.csv('00_Data/data_MCPD.csv') # Generated from STATA files
dat.table = data.raw[row.names(data_MCPD),]

colnames(dat.table)
## Transform Variable Name
dat.table = dat.table |>
  rename(Age = age,
         DHPMA = DHPMA_a,
         Smoking = SMOKE,
         Income = FAMINCOM5w,
         DB = db,
         Married = MARRIAGE,
         Drinking = alcohol,
         Physical_Activity = MET) |>
  mutate(SEX = factor(
      SEX,
      levels = c(1, 2),
      labels = c("Men", "Women")
    ))

## Generate Table1 Summary
library(gtsummary)
library(flextable)

dat.table %>%
  select(Age, education, Married, SEX,
         Income, Smoking, Drinking,
         CVD, DB, HBP, Physical_Activity,
         BMI, DHPMA, dietaryMCPD,
         BEANOILintake, PEANUTOIintake, LARDOILintake, totalenergy) %>%
  tbl_summary(
    by = "SEX",
    statistic = list(
      all_continuous() ~ "{mean} ({sd})",
      all_categorical() ~ "{n} ({p}%)"
    ),
    digits = list(
      all_continuous() ~ c(2, 2),  # 保留两位小数
      all_categorical() ~ c(0, 2)  # 保留两位小数的百分比
    )) %>%
  add_overall() %>%
  add_p(test = list(all_continuous() ~ "aov",
                    all_categorical() ~ "chisq.test")) %>%
  as_flex_table() %>%
  save_as_docx(path = "01_Output_Results/Table1.docx")
```

# 03.MLR Models
## Fitted results
```{r}
model.MLR1 <-lm(dietaryMCPD ~ age+SEX+education+MARRIAGE+alcohol+SMOKE
                  +FAMINCOM5w
                  +DHPMA_a, 
                  data = data_MCPD)

model.MLR2 <-lm(dietaryMCPD ~ age+SEX+education+MARRIAGE+alcohol+SMOKE
                +FAMINCOM5w
                +HEIGHT+BMI+CREATININE+MET+CVD+HBP+MET+db+HBP+WEIGHT
                +DHPMA_a, 
                data = data_MCPD)

model.MLR3 <-lm(dietaryMCPD ~ age+SEX+education+MARRIAGE+alcohol+SMOKE
                +FAMINCOM5w
                +HEIGHT+BMI+CREATININE+MET+CVD+HBP+MET+db+HBP+WEIGHT
                +totalenergy+BEANOILintake+PEANUTOIintake+LARDOILintake
                +DHPMA_a, 
                data = data_MCPD)

MLR1.summary = broom::tidy(model.MLR1, conf.int = TRUE)
MLR2.summary = broom::tidy(model.MLR2, conf.int = TRUE)
MLR3.summary = broom::tidy(model.MLR3, conf.int = TRUE)

write.csv(MLR1.summary, '01_Output_Results/MLR1_output.csv')
write.csv(MLR2.summary, '01_Output_Results/MLR2_output.csv')
write.csv(MLR3.summary, '01_Output_Results/MLR3_output.csv')

# summary(model.MLR1)
# summary(model.MLR2)
# summary(model.MLR3)
```

## Selection by Lasso
```{r}
set.seed(208)
pdf('01_Output_Results/Figure-Lasso.pdf')
library(glmnet)
x = model.matrix(dietaryMCPD~.,data_MCPD)
y = data_MCPD$dietaryMCPD

grid = 10^seq(5,-5,length=20)
lasso.model = glmnet(x,y, alpha=1, lambda=grid)
cv.out <- cv.glmnet(x,y,alpha=1)
bestlam <- cv.out$lambda.min
lam_1se <- cv.out$lambda.1se
lasso.pred <- predict(lasso.model, s = bestlam, newx = x)
lasso.coef = predict(lasso.model, type = 'coefficients', s = bestlam)
plot(cv.out)
plot(lasso.model)

dev.off()

lasso.coef.out = data.frame(as.matrix(lasso.coef))
write.csv(lasso.coef.out, '01_Output_Results/Lasso-Coefficients.csv') # Exclude variables whose s1 value is '.', WEIGHT
```

## Check Co-linearity
```{r}
colinear.out = data.frame(vif(model.MLR3)) # No
colnames(colinear.out)[3] = 'GVIF^(1/(2*Df))'
write.csv(colinear.out, '01_Output_Results/CoLinear_Check.csv')
```

## Exclude WEIGHT Variable for MLR-4
```{r}
model.MLR4 <-lm(dietaryMCPD ~ age+SEX+education+MARRIAGE+alcohol+SMOKE
                +FAMINCOM5w
                +HEIGHT+BMI+CREATININE+MET+CVD+HBP+MET+db+HBP
                +totalenergy+BEANOILintake+PEANUTOIintake+LARDOILintake
                +DHPMA_a,
                data = data_MCPD)

MLR4.summary = broom::tidy(model.MLR4, conf.int = TRUE)
write.csv(MLR4.summary, '01_Output_Results/MLR4_output(NoWEIGHT).csv')
summary(model.MLR4)
```


```{r}
write.csv(data_MCPD, '00_Data/process_data.csv')
```


## Interaction between DHPMA and co-varaites
```{r}
data_MCPD$WEIGHT = NULL
colnames(data_MCPD)
varList <- c("CREATININE","HEIGHT","BMI","age","BEANOILintake",
             "PEANUTOIintake","LARDOILintake","MET","totalenergy",'db',
             "MARRIAGE","SMOKE","SEX","FAMINCOM5w","CVD","HBP","alcohol","education")

## Interaction Check
results_BA_CES <- data.frame(Estimate = NA,
                             SE = NA,
                             T.value = NA,
                             P_value = NA,
                             R = NA)
for (var in varList){
  formula = as.formula(paste0('dietaryMCPD~ DHPMA_a','+.+DHPMA_a:', var))
  fit <- lm(formula, data_MCPD)
  a = summary(fit); tmp = data.frame(a$coefficients)
  colnames(tmp) = c('Estimate', 'SE', 'T.value', 'P_value')
  tmp$R = a$r.squared
  
  ## Find Output Row Number
  num1 = grepl('DHPMA_a', row.names(tmp))
  num2 = grepl(var, row.names(tmp))
  num.all = num1 | num2
  
  results_BA_CES = rbind(results_BA_CES, tmp[num.all,])
}
results_BA_CES[-1,]
write.csv(results_BA_CES[-1,],
          '01_Output_Results/MLR4_Interaction.csv')

order = order(results_BA_CES[grepl(':',row.names(results_BA_CES)),]$R, decreasing = TRUE)
results_BA_CES[grepl(':',row.names(results_BA_CES)),][order,]


```

# 04.GAM Model
### Fit and Check Non-linearity
```{r}
model.gam1 <- lm(dietaryMCPD~bs(CREATININE)+bs(HEIGHT)+bs(BMI)+bs(age)+bs(BEANOILintake)
                             + bs(PEANUTOIintake)+bs(LARDOILintake)+bs(MET)+bs(DHPMA_a)
                             + bs(totalenergy)+MARRIAGE+SEX+FAMINCOM5w+CVD+SMOKE     
                             + HBP+alcohol+education
                             , data = data_MCPD)
GAM1.summary = summary(model.gam1)
# plot(model.gam1, pages = 1)
# CREATININE,HEIGHT,BMI,MET and DHPMA don't show non-linearity characteristics.
write.csv(data.frame(GAM1.summary$coefficients), '01_Output_Results/GAM1-Check-NonLinear.csv')

```

### Re-fit Model
```{r}
model.gam2 <- lm(dietaryMCPD~CREATININE+HEIGHT+BMI+bs(age)
                             + bs(BEANOILintake) + bs(PEANUTOIintake) + bs(LARDOILintake) 
                             + MET + DHPMA_a + bs(totalenergy)
                             + MARRIAGE + SEX + FAMINCOM5w + CVD + SMOKE        
                             + HBP+alcohol+education, data = data_MCPD)
# CREATININE,HEIGHT,BMI,MET and DHPMA don't show non-linearity characteristics.
GAM2.summary = summary(model.gam2)
GAM2.summary
```

## Interaction between DHPMA and co-varaites
```{r}
colnames(data_MCPD)
varList <- c("CREATININE","HEIGHT","BMI","age","BEANOILintake",
             "PEANUTOIintake","LARDOILintake","MET","totalenergy",'db',
             "MARRIAGE","SMOKE","SEX","FAMINCOM5w","CVD","HBP","alcohol","education")

## Interaction Check
nonlinear.var = c('age', 'BEANOILintake', 'PEANUTOIintake', 'LARDOILintake', 'totalenergy')
results_BA_CES <- data.frame(Estimate = NA,
                             SE = NA,
                             T.value = NA,
                             P_value = NA,
                             R = NA)
for (var in varList){
  if (var %in% nonlinear.var){
    formula = as.formula(paste0('dietaryMCPD~', 'DHPMA_a + CREATININE+HEIGHT+BMI+bs(age) + bs(BEANOILintake) + bs(PEANUTOIintake) + bs(LARDOILintake) + MET + bs(totalenergy) + MARRIAGE + SEX + FAMINCOM5w + CVD + SMOKE + HBP+alcohol+education','+DHPMA_a:bs(', var,')'))
  } else{
    formula = as.formula(paste0('dietaryMCPD~', 'DHPMA_a + CREATININE+HEIGHT+BMI+bs(age) + bs(BEANOILintake) + bs(PEANUTOIintake) + bs(LARDOILintake) + MET + bs(totalenergy) + MARRIAGE + SEX + FAMINCOM5w + CVD + SMOKE + HBP+alcohol+education','+DHPMA_a:', var))
  }
  
  
  fit <- gam(formula, data = data_MCPD)
  a = summary(fit); tmp = data.frame(a$coefficients)
  colnames(tmp) = c('Estimate', 'SE', 'T.value', 'P_value')
  tmp$R = a$r.squared
  
  ## Find Output Row Number
  num1 = grepl('DHPMA_a', row.names(tmp))
  num2 = grepl(var, row.names(tmp))
  num.all = num1 | num2
  
  results_BA_CES = rbind(results_BA_CES, tmp[num.all,])
}
results_BA_CES[-1,]
write.csv(results_BA_CES[-1,],
          '01_Output_Results/GAM_Interaction.csv')

order = order(results_BA_CES[grepl(':',row.names(results_BA_CES)),]$R, decreasing = TRUE)
results_BA_CES[grepl(':',row.names(results_BA_CES)),][order,]
```
