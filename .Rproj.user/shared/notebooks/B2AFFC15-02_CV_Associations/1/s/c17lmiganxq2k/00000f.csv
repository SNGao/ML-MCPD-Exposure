"0","library(caret)"
"0","library(randomForest)"
"0",""
"0","set.seed(210)"
"0","folds <- createFolds(y = data_MCPD$dietaryMCPD, k = K)"
"0",""
"0","# Initialize the result data frame"
"0","result.train <- data.frame(RMSE = numeric(K), R2 = numeric(K), MAE = numeric(K))"
"0","result.test <- data.frame(RMSE = numeric(K), R2 = numeric(K), MAE = numeric(K))"
"0",""
"0","for (i in 1:K) {"
"0","  fold.test <- data_MCPD[folds[[i]], ]"
"0","  fold.train <- data_MCPD[-folds[[i]], ]"
"0","  "
"0","  # Train model"
"0","  model.RF <- randomForest("
"0","    x = fold.train[,-1],"
"0","    y = fold.train$dietaryMCPD,"
"0","    mtry = best_params_rf$mtry,"
"0","    ntree = best_params_rf$ntree,"
"0","    maxnodes = best_params_rf$maxnodes,"
"0","    nodesize = best_params_rf$nodesize,"
"0","    importance = TRUE"
"0","  )"
"0","  "
"0","  # Performance for training set"
"0","  trainpred <- predict(model.RF, newdata = fold.train[,-1])"
"0","  temp.train <- defaultSummary(data.frame(obs = fold.train$dietaryMCPD, pred = trainpred))"
"0","  result.train[i, ] <- c(temp.train[""RMSE""], temp.train[""Rsquared""], temp.train[""MAE""])"
"0","  "
"0","  # Performance for test set"
"0","  testpred <- predict(model.RF, newdata = fold.test[,-1])"
"0","  temp.test <- defaultSummary(data.frame(obs = fold.test$dietaryMCPD, pred = testpred))"
"0","  result.test[i, ] <- c(temp.test[""RMSE""], temp.test[""Rsquared""], temp.test[""MAE""])"
"0","}"
"0",""
"0","# Extract R2, RMSE, and MAE of the test set"
"0","R2_RF <- result.test$R2"
"0","RMSE_RF <- result.test$RMSE"
"0","MAE_RF <- result.test$MAE"
"0",""
"0","Result_total[4, ] <- c("
"0","  'RF',"
"0","  mean(result.train$RMSE),"
"0","  mean(result.train$R2),"
"0","  mean(result.train$MAE),"
"0","  mean(result.test$RMSE),"
"0","  mean(result.test$R2),"
"0","  mean(result.test$MAE)"
"0",")"
